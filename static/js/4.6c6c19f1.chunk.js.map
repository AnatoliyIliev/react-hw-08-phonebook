{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ElementContactList","name","number","onDeleteContact","className","styles","ContactList_name","onClick","connect","state","contacts","contactsSelectors","getVisibleContacts","dispatch","id","contactsOperations","deleteContacts","contactList","map","contactList_items","value","getFilter","onChange","event","changeFilter","currentTarget","labelName","type","barStyles","display","alignItems","marginBottom","ContactsView","params","useDispatch","isLoadingContacts","useSelector","getLoading","useEffect","fetchContacts","Container","style"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,yC,mBCArFD,EAAOC,QAAU,CAAC,UAAY,4B,iICUfC,EATY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,gBAAjB,OACzB,qCACE,uBAAMC,UAAWC,IAAOC,iBAAxB,UACGL,EADH,KACWC,KAEX,wBAAQK,QAASJ,EAAjB,wB,yBCkCWK,eARS,SAAAC,GAAK,MAAK,CAChCC,SAAUC,IAAkBC,mBAAmBH,OAGtB,SAAAI,GAAQ,MAAK,CACtCV,gBAAiB,SAAAW,GAAE,OAAID,EAASE,IAAmBC,eAAeF,QAGrDN,EAnCK,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAUP,EAAb,EAAaA,gBAAb,OAClB,mCAEE,oBAAIC,UAAWC,IAAOY,YAAtB,SACGP,EAASQ,KAAI,gBAAGjB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQY,EAAjB,EAAiBA,GAAjB,OACZ,oBAAIV,UAAWC,IAAOc,kBAAtB,SACE,cAAC,EAAD,CACElB,KAAMA,EACNC,OAAQA,EACRC,gBAAiB,kBAAMA,EAAgBW,OAJGA,a,iBCcvCN,eARS,SAAAC,GAAK,MAAK,CAChCW,MAAOT,IAAkBU,UAAUZ,OAGV,SAAAI,GAAQ,MAAK,CACtCS,SAAU,SAAAC,GAAK,OAAIV,EAASW,YAAaD,EAAME,cAAcL,YAGhDZ,EApBA,SAAC,GAAD,IAAGY,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,OACb,wBAAOlB,UAAWC,IAAOqB,UAAzB,kCAEE,uBAAOC,KAAK,OAAOP,MAAOA,EAAOE,SAAUA,UCIzCM,EAAY,CAChBC,QAAS,OACTC,WAAY,WACZC,aAAc,IAGD,SAASC,EAAaC,GACnC,IAAMpB,EAAWqB,cACXC,EAAoBC,YAAYzB,IAAkB0B,YAIxD,OAFAC,qBAAU,kBAAMzB,EAASE,IAAmBwB,mBAAkB,CAAC1B,IAG7D,eAAC2B,EAAA,EAAD,WACE,sBAAKC,MAAOb,EAAZ,UACE,cAAC,EAAD,IAECO,GAAqB,8FAGxB,cAAC,EAAD","file":"static/js/4.6c6c19f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1d0hs\",\"contactList_items\":\"ContactList_contactList_items__2Rb2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"Filter_labelName__3MsUp\"};","import styles from \"./ElementContactList.module.scss\";\r\n\r\nconst ElementContactList = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <span className={styles.ContactList_name}>\r\n      {name}: {number}\r\n    </span>\r\n    <button onClick={onDeleteContact}>Delete</button>\r\n  </>\r\n);\r\n\r\nexport default ElementContactList;\r\n","import { connect } from 'react-redux';\r\nimport ElementContactList from '../ElementContactList';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <>\r\n    {/* <h1>nj jyj { contacts }</h1> */}\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={styles.contactList_items} key={id}>\r\n          <ElementContactList\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.labelName}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Container from '../components/Container';\nimport ContactList from '../components/ContactList';\n// import TodoEditor from '../components/TodoEditor';\nimport Filter from '../components/Filter';\n\n// import IconButton from '../components/IconButton';\n// import { ReactComponent as AddIcon } from '../icons/add.svg';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function ContactsView(params) {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div style={barStyles}>\n        <Filter />\n\n        {isLoadingContacts && <h1>Загружаем...</h1>}\n      </div>\n\n      <ContactList />\n    </Container>\n  );\n}\n"],"sourceRoot":""}